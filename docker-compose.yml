services:
  client:
    build:
      context: .
      dockerfile: client/Dockerfile
    ports:
      - "80:80" # Map host port 80 to container port 80
    networks:
      - app-network
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    # No ports needed here; accessed via nginx proxy
    # ports:
    #  - "5000:5000"
    env_file:
      - ./server/.env # Load environment variables from .env file
    volumes:
      - ./server/src:/app # Mount local src for development hot-reloading (optional)
      # - ./server/server.log:/app/server.log # Removed log volume mount
    networks:
      - app-network
    depends_on:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password} # Set a strong password in production!
      POSTGRES_DB: ${POSTGRES_DB:-vcptrader}
      # Add any other necessary TimescaleDB/PostgreSQL environment variables
    healthcheck:
      # Updated user and db variables for healthcheck
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-postgres} -d $${POSTGRES_DB:-vcptrader}"]
      interval: 10s