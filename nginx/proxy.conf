upstream backend {
    # Use the server service name defined in docker-compose
    server server:8000;
}

server {
    listen 80;
    # Use localhost or a specific server name if needed
    server_name localhost;

    # Root directory for static frontend files
    root /usr/share/nginx/html;
    index index.html;

    # Cloudflare Real IP - Uncomment and configure if Nginx is directly behind Cloudflare
    # real_ip_header CF-Connecting-IP;
    # set_real_ip_from <cloudflare_ip_range>; # e.g., 173.245.48.0/20
    # set_real_ip_from ...; # Add all Cloudflare ranges

    # Serve static files first, then fallback to index.html for client-side routing
    location / {
        try_files $uri $uri/ /index.html;
    }

    # WebSocket location - Proxy to backend
    location /socket/ {
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://backend/socket/;

        # Pass essential headers to the backend
        proxy_set_header Host $host;
        # Use $remote_addr if Nginx isn't directly behind Cloudflare
        # Use $realip_remote_addr if using ngx_http_realip_module and configured above
        # Use $http_cf_connecting_ip if directly behind Cloudflare and header is trusted
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Optionally pass Cloudflare headers if present and trusted
        # proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        # proxy_set_header CF-IPCountry $http_cf_ipcountry;
        # proxy_set_header CF-Ray $http_cf_ray;
        # proxy_set_header CF-Visitor $http_cf_visitor;

        # Caching Headers (adjust as needed)
        expires off;
        add_header Pragma no-cache;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;
    }

    # Optional: Add specific API proxy if needed (e.g., if not handled by client-side routing)
    # location /api/ {
    #     proxy_pass http://backend/api/;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     # Add other necessary headers (CF, etc.)
    # }
} 